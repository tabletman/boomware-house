# GitLab CI/CD Pipeline for Boom Warehouse E-commerce Demo
# This pipeline builds and deploys the Next.js application

stages:
  - build
  - test
  - deploy

variables:
  NODE_VERSION: "18.17.0"

# Cache node_modules between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .next/cache/

# Build job
build:
  stage: build
  image: node:${NODE_VERSION}
  script:
    - echo "Installing dependencies..."
    - npm ci
    - echo "Building Next.js application..."
    - npm run build
  artifacts:
    paths:
      - .next/
      - public/
      - node_modules/
    expire_in: 1 day
  only:
    - main
    - develop
    - merge_requests

# Test job
test:
  stage: test
  image: node:${NODE_VERSION}
  dependencies:
    - build
  script:
    - echo "Running tests..."
    - npm run lint || true  # Continue even if linting fails
    - npm test || echo "No tests configured yet"
  only:
    - main
    - develop
    - merge_requests

# Deploy to GitLab Pages
pages:
  stage: deploy
  dependencies:
    - build
  script:
    - echo "Preparing deployment..."
    - mkdir -p public
    - cp -r .next/static public/_next/static
    - cp -r .next/standalone/* public/ || true
    - echo "Deployment prepared for GitLab Pages"
  artifacts:
    paths:
      - public
  only:
    - main

# Deploy to staging (Docker)
deploy_staging:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "Building Docker image..."
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:staging
    - echo "Pushing to GitLab Container Registry..."
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:staging
  only:
    - develop
  environment:
    name: staging
    url: https://staging.boom-warehouse.com

# Deploy to production (Docker)
deploy_production:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "Building production Docker image..."
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:production
    - echo "Pushing to GitLab Container Registry..."
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:production
  only:
    - main
  when: manual
  environment:
    name: production
    url: https://boom-warehouse.com