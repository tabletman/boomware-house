# GitLab CI/CD Pipeline for Boom Warehouse E-commerce Demo
# This pipeline builds and deploys the Next.js application

stages:
  - build
  - test
  - deploy

variables:
  NODE_VERSION: "18.17.0"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

# Cache node_modules between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .next/cache/

# Build Next.js Application
build:
  stage: build
  image: node:${NODE_VERSION}
  script:
    - echo "Installing dependencies..."
    - npm ci
    - echo "Building Next.js application..."
    - npm run build
    - echo "Exporting static site..."
    - npx next export -o out || echo "Export not needed for this config"
  artifacts:
    paths:
      - .next/
      - out/
      - public/
      - node_modules/
    expire_in: 1 day
  only:
    - main
    - develop
    - merge_requests

# Test job
test:
  stage: test
  image: node:${NODE_VERSION}
  dependencies:
    - build
  script:
    - echo "Running tests..."
    - npm run lint || true  # Continue even if linting fails
    - npm test || echo "No tests configured yet"
  only:
    - main
    - develop
    - merge_requests

# Build and push Docker image
build_image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "Building Docker image..."
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - echo "Pushing to GitLab Container Registry..."
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - main
    - develop

# Deploy to GitLab Pages (Static Site)
pages:
  stage: deploy
  dependencies:
    - build
  script:
    - echo "Preparing GitLab Pages deployment..."
    - mkdir -p .public
    - |
      if [ -d "out" ]; then
        echo "Using Next.js export output..."
        cp -r out/* .public/
      else
        echo "Using build output..."
        cp -r .next/static .public/_next/static 2>/dev/null || true
        cp -r public/* .public/ 2>/dev/null || true
      fi
    - mv .public public
    - echo "GitLab Pages deployment ready"
  artifacts:
    paths:
      - public
  only:
    - main

# Deploy container to staging server
deploy_staging:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $STAGING_SERVER >> ~/.ssh/known_hosts 2>/dev/null || true
  script:
    - |
      ssh $SSH_USER@$STAGING_SERVER << EOF
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
        docker stop boomware-staging || true
        docker rm boomware-staging || true
        docker run -d --name boomware-staging \
          -p 3001:3000 \
          -e NODE_ENV=production \
          -e NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL \
          -e NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY \
          --restart unless-stopped \
          $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      EOF
  only:
    - develop
  when: manual
  environment:
    name: staging
    url: https://staging.boomware.house

# Deploy container to production server
deploy_production:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $PRODUCTION_SERVER >> ~/.ssh/known_hosts 2>/dev/null || true
  script:
    - |
      ssh $SSH_USER@$PRODUCTION_SERVER << EOF
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
        docker stop boomware-production || true
        docker rm boomware-production || true
        docker run -d --name boomware-production \
          -p 80:3000 \
          -e NODE_ENV=production \
          -e NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL \
          -e NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY \
          --restart unless-stopped \
          $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      EOF
  only:
    - main
  when: manual
  environment:
    name: production
    url: https://boomware.house